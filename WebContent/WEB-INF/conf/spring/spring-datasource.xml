<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!--import resource="services.xml"/-->

	<!--jee:jndi-lookup id="myDataSource" jndi-name="java:comp/env/jdbc/myds"/-->

	<!--bean id="propertyCongigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="/WEB-INF/config/jdbc/jdbc.properties"></property>
	</bean-->
    
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>

    <!--context:property-placeholder location="classpath:persistence-mysql.properties" /-->
    
    <!--tx:annotation-driven transaction-manager="transactionManager"/-->
        
	<!-- bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${database.driver}"/>
        <property name="url" value="${database.url}"/>
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
    </bean-->
    
    <bean id="dataSource" class = "com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${database.driver}" />
        <property name="jdbcUrl" value="${database.url}" />
        <property name="user" value="${database.username}" />
        <property name="password" value="${database.password}" /> 

        <!-- these are C3P0 properties -->
        <property name="acquireIncrement" value="10" /><!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="preferredTestQuery" value="${database.validationQuery}"/>
        <property name="initialPoolSize" value="1" /><!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <property name="minPoolSize" value="1" /><!--连接池中保留的最小连接数。-->
        <property name="maxPoolSize" value="10" /><!--连接池中保留的最大连接数。Default: 15 -->
        <property name="maxIdleTime" value="1800" /><!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="idleConnectionTestPeriod" value="60" /><!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
        <property name="testConnectionOnCheckin" value="true"/><!--如果设为true那么在取得连接的同时将校验连接的有效性。Default: false -->
        <property name="breakAfterAcquireFailure" value="false"/><!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection() 的时候继续尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。Default: false-->
 	</bean>
    
    <!-- 
    IBATIS config
     -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="/WEB-INF/conf/mybatis/sql-map-config.xml"/>
		<property name="mapperLocations" value="/WEB-INF/conf/mybatis/mappers/**/*.xml"/>
		<property name="plugins">
			<list>
				<bean class="com.github.miemiedev.mybatis.paginator.OffsetLimitInterceptor">
					<property name="dialectClass" value="${database.mybatis.dialect}"></property>
					<!-- property name="dialectClass" value="com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect"></property-->
					<!-- property name="dialectClass" value="com.github.miemiedev.mybatis.paginator.dialect.OracleDialect"></property-->
					<!-- property name="dialectClass" value="com.github.miemiedev.mybatis.paginator.dialect.DB2Dialect"></property-->
					<!-- property name="dialectClass" value="com.github.miemiedev.mybatis.paginator.dialect.SQLServerDialect"></property-->
				</bean>
			</list>
		</property> 
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

 	<!-- 
    HIBERNATE config
     -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
         <property name="dataSource" ref="dataSource"></property>
         <!--property name="annotatedClasses">
             <list>
                 <value>org.garden.sysadmin.dao.model.SysDepartment</value>
             </list>
         </property-->
         <property name="packagesToScan" >
         	<list>
         		<value>org.garden.sysadmin.dao.model</value>
         		<value>org.garden.web.prototype.dao.model</value>
         	</list>
         </property>
         <property name="hibernateProperties">
	         <props>
	             <prop key="hibernate.dialect">${database.dialect}</prop>
	             <!--prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop-->
	             <prop key="hibernate.show_sql">true</prop>
	             <!--prop key="hibernate.hbm2ddl.auto">update</prop--> 
	         </props>
         </property>
     </bean>
     
     <!--context:annotation-config/-->
</beans>